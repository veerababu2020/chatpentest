import openai
import subprocess
import pyfiglet

pyfiglet_design = pyfiglet.figlet_format("chatpentest")
print(pyfiglet_design)
# Set your OpenAI API key here
OPENAI_API_KEY = "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"

# Function to communicate with ChatGPT API and generate MSF commands
def generate_msf_command(text):
    prompt = f"Generate an MSF command to {text}"
    command = None

    while not command or "msf >" not in command:
        response = openai.Completion.create(
            engine="text-davinci-003",
            prompt=prompt,
            max_tokens=64,
            n=1,
            stop=None,
            temperature=0.7,
            top_p=1,
            frequency_penalty=0,
            presence_penalty=0,
            api_key=OPENAI_API_KEY
        )
        command = response.choices[0].text.strip()
    command = command.replace("msf >", "").strip()
    return command.strip()


# Function to run MSF command within msfconsole
def run_msf_command_and_exit(command):
    try:
        subprocess.run(["msfconsole", "-x", command], text=True)
    except Exception as e:
        print(f"Error occurred: {e}")


# Function to check if user input is relevant for MSF
def is_relevant(text):
    # Add your custom logic to determine relevance
    # Here's a simple example
    keywords = ['msf', 'exploit', 'payload', 'sessions']
    return any(keyword in text for keyword in keywords)


def main():
    print("Welcome to MSF ChatGPT Integration!")
    print("Type 'exit' to quit.")

    while True:
        # Prompt user for the query
        user_input = input("\nEnter your user Text: ")

        if user_input.lower() == 'exit':
            print("Goodbye!")
            break

        if is_relevant(user_input):
            # Generate MSF command using ChatGPT with user query
            msf_command = generate_msf_command(user_input)

            # Display the generated MSF command
            print("\nGenerated MSF Command:")
            print(msf_command)

            # Run MSF command and exit
            run_msf_command_and_exit(msf_command)
        else:
            print("Sorry, the input text is not relevant.")


if __name__ == "__main__":
    main()
